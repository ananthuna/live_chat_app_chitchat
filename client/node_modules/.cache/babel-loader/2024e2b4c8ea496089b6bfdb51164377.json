{"ast":null,"code":"var _jsxFileName = \"/home/ananthu/Desktop/chat-app/client/chat-app-react-frondend/src/pages/Chatpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Box, Stack } from '@mui/system';\nimport AdminNavbar from '../components/AdminHeader';\nimport ChatHeader from '../components/ChatHeader';\nimport SideBar from '../components/SideBar';\nimport ChatBody from '../components/ChatBody';\nimport ChatFooter from '../components/ChatFooter';\nimport axios from '../axios';\nimport { UserContext } from '../Context/Context';\nimport { ChatIDContext } from '../Context/ChatIDContext';\nimport { baseUrl } from '../url';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chatpage(_ref) {\n  _s();\n\n  let {\n    socket\n  } = _ref;\n  // const { setImageURL } = useContext(UserContext)\n  // const [messages, setMessages] = useState([])\n  // const [message, setMessage] = useState()\n  // const [user, setUser] = useState(null)\n  // const [typingStatus, setTypingStatus] = useState('')\n  // const lastMessageRef = useRef(null);\n  // const { chatID } = useContext(ChatIDContext)\n  // const { userId } = useContext(UserContext)\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  useEffect(() => {\n    // console.log(user);\n    let User = localStorage.getItem('user');\n    console.log(JSON.parse(User));\n    setUser(JSON.parse(User));\n  }, []); // useEffect(() => {\n  //   axios.get(`${baseUrl}/auth`, { withCredentials: true }).then((response) => {\n  //     if (response.data.loginGranted) {\n  //       setUser(response.data.user.firstName)\n  //       // setUserId(response.data.user._id)\n  //       setImageURL(response.data.user.imageUrl)\n  //       socket.on(userId, ({ content }) => {\n  //         setMessage(content)\n  //         console.log('start');\n  //         // console.log(messages.includes(content));\n  //         console.log('end');\n  //         setMessages(messages => ([...messages, content]))\n  //       })\n  //     }\n  //   })\n  // }, [socket])\n  // useEffect(() => {\n  //   // 👇️ scroll to bottom every time messages change\n  //   lastMessageRef.current?.scrollIntoView({ behavior: 'smooth' });\n  //   console.log(messages);\n  // }, [messages]);\n  // useEffect(() => {\n  //   // send typing status to backend using socket.io\n  //   socket.on('typingResponse', (data) => setTypingStatus(data));\n  // }, [socket]);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: {\n            xs: \"100%\",\n            sm: '35%',\n            md: \"25%\"\n          },\n          display: {\n            xs: \"none\",\n            sm: \"block\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '65%',\n            md: \"75%\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chatpage, \"nBu21mcTJ5MzRAAEVh+3IQoH1ng=\");\n\n_c = Chatpage;\nexport default Chatpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatpage\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","Box","Stack","AdminNavbar","ChatHeader","SideBar","ChatBody","ChatFooter","axios","UserContext","ChatIDContext","baseUrl","Typography","Chatpage","socket","user","setUser","User","localStorage","getItem","console","log","JSON","parse","width","xs","sm","md","display"],"sources":["/home/ananthu/Desktop/chat-app/client/chat-app-react-frondend/src/pages/Chatpage.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { Box, Stack } from '@mui/system'\nimport AdminNavbar from '../components/AdminHeader'\nimport ChatHeader from '../components/ChatHeader'\nimport SideBar from '../components/SideBar'\nimport ChatBody from '../components/ChatBody'\nimport ChatFooter from '../components/ChatFooter'\nimport axios from '../axios'\nimport { UserContext } from '../Context/Context'\nimport { ChatIDContext } from '../Context/ChatIDContext';\nimport { baseUrl } from '../url'\nimport { Typography } from '@mui/material'\n\n\nfunction Chatpage({ socket }) {\n  // const { setImageURL } = useContext(UserContext)\n  // const [messages, setMessages] = useState([])\n  // const [message, setMessage] = useState()\n  // const [user, setUser] = useState(null)\n  // const [typingStatus, setTypingStatus] = useState('')\n  // const lastMessageRef = useRef(null);\n  // const { chatID } = useContext(ChatIDContext)\n  // const { userId } = useContext(UserContext)\n  const { user, setUser } = useContext(UserContext)\n  useEffect(() => {\n    // console.log(user);\n    let User = localStorage.getItem('user')\n    console.log(JSON.parse(User));\n    setUser(JSON.parse(User))\n  }, [])\n\n\n  // useEffect(() => {\n\n  //   axios.get(`${baseUrl}/auth`, { withCredentials: true }).then((response) => {\n  //     if (response.data.loginGranted) {\n  //       setUser(response.data.user.firstName)\n  //       // setUserId(response.data.user._id)\n  //       setImageURL(response.data.user.imageUrl)\n  //       socket.on(userId, ({ content }) => {\n  //         setMessage(content)\n  //         console.log('start');\n  //         // console.log(messages.includes(content));\n  //         console.log('end');\n  //         setMessages(messages => ([...messages, content]))\n\n  //       })\n  //     }\n  //   })\n  // }, [socket])\n\n  // useEffect(() => {\n  //   // 👇️ scroll to bottom every time messages change\n  //   lastMessageRef.current?.scrollIntoView({ behavior: 'smooth' });\n  //   console.log(messages);\n\n  // }, [messages]);\n\n  // useEffect(() => {\n  //   // send typing status to backend using socket.io\n  //   socket.on('typingResponse', (data) => setTypingStatus(data));\n  // }, [socket]);\n\n  return (\n    <Box >\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n\n\n        <Box sx={{ width: { xs: \"100%\", sm: '35%', md: \"25%\" }, display: { xs: \"none\", sm: \"block\" } }}>\n          {/* <Typography>{user.Name}</Typography> */}\n          <AdminNavbar  />\n          {/* socket={socket} user={userId} */}\n          {/* <SideBar /> */}\n          {/* socket={socket} useradmin={userId} message={message}  */}\n        </Box>\n        <Box sx={{ width: { xs: '100%', sm: '65%', md: \"75%\" }, }} >\n          {/* <ChatHeader /> */}\n          {/* <ChatBody  /> */}\n          {/* user={user} messages={messages} lastMessageRef={lastMessageRef} typingStatus={typingStatus} */}\n          {/* <ChatFooter  /> */}\n          {/* user={user} userId={userId} socket={socket} */}\n        </Box>\n\n\n\n        {/* {userId ?\n          (<Box sx={{ width: { xs: \"100%\", sm: '35%', md: \"25%\" }, display: { xs: \"none\", sm: \"block\" } }}>\n            <AdminNavbar socket={socket} user={userId} />\n\n            <SideBar socket={socket} useradmin={userId} message={message} />\n\n          </Box>)\n          :\n          (<Box sx={{ width: { xs: \"100%\", sm: '40%', md: \"25%\" }, display: { xs: \"block\" } }}>\n            <AdminNavbar socket={socket} user={userId} />\n\n            <SideBar socket={socket} useradmin={userId} message={message} />\n\n          </Box>)\n        }\n        {chatID ?\n          (<Box sx={{ width: { xs: '100%', sm: '65%', md: \"75%\" }, }} >\n            <ChatHeader />\n            <ChatBody user={user} messages={messages} lastMessageRef={lastMessageRef} typingStatus={typingStatus} />\n\n            <ChatFooter user={user} userId={userId} socket={socket} />\n\n          </Box>)\n          :\n          (<Box sx={{ display: { xs: \"none\", sm: \"block\" }, width: '75%', }} >\n            <ChatHeader />\n            <ChatBody user={user} messages={messages} lastMessageRef={lastMessageRef} typingStatus={typingStatus} />\n\n            <ChatFooter user={user} userId={userId} socket={socket} />\n\n          </Box>)\n        } */}\n      </Stack>\n    </Box>\n  )\n}\n\nexport default Chatpage\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,aAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;;;AAGA,SAASC,QAAT,OAA8B;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBnB,UAAU,CAACY,WAAD,CAApC;EACAX,SAAS,CAAC,MAAM;IACd;IACA,IAAImB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;IACAC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAZ;IACAD,OAAO,CAACM,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAD,CAAP;EACD,CALQ,EAKN,EALM,CAAT,CAV4B,CAkB5B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,GAAD;IAAA,uBACE,QAAC,KAAD;MAAO,SAAS,EAAC,KAAjB;MAAuB,cAAc,EAAC,eAAtC;MAAA,wBAGE,QAAC,GAAD;QAAK,EAAE,EAAE;UAAEO,KAAK,EAAE;YAAEC,EAAE,EAAE,MAAN;YAAcC,EAAE,EAAE,KAAlB;YAAyBC,EAAE,EAAE;UAA7B,CAAT;UAA+CC,OAAO,EAAE;YAAEH,EAAE,EAAE,MAAN;YAAcC,EAAE,EAAE;UAAlB;QAAxD,CAAT;QAAA,uBAEE,QAAC,WAAD;UAAA;UAAA;UAAA;QAAA;MAFF;QAAA;QAAA;QAAA;MAAA,QAHF,eAUE,QAAC,GAAD;QAAK,EAAE,EAAE;UAAEF,KAAK,EAAE;YAAEC,EAAE,EAAE,MAAN;YAAcC,EAAE,EAAE,KAAlB;YAAyBC,EAAE,EAAE;UAA7B;QAAT;MAAT;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAyDD;;GA1GQd,Q;;KAAAA,Q;AA4GT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}