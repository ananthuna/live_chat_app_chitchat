{"ast":null,"code":"var _jsxFileName = \"/home/ananthu/Desktop/chat-app/client/src/components/MyVideo.js\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@mui/system';\nimport React, { useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  getConnectedDevices\n} = require('../MediaQuery/MediaDevices');\n\nfunction MyVideo() {\n  _s();\n\n  const videoRef = useRef(null);\n  const [devices, setDevices] = useState();\n  useEffect(() => {\n    getConnectedDevices('videoinput').then(doc => setDevices(doc));\n  }, []);\n  useEffect(() => {\n    navigator.mediaDevices.addEventListener('devicechange', event => {\n      getConnectedDevices('videoinput').then(doc => setDevices(doc));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      width: '100%',\n      pl: 120\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video001\",\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      controls: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyVideo, \"ykAyFjCM8EMpNyu97JUEHYJJG/M=\");\n\n_c = MyVideo;\nexport default MyVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyVideo\");","map":{"version":3,"names":["Box","React","useRef","useState","useEffect","getConnectedDevices","require","MyVideo","videoRef","devices","setDevices","then","doc","navigator","mediaDevices","addEventListener","event","display","alignItems","justifyContent","width","pl"],"sources":["/home/ananthu/Desktop/chat-app/client/src/components/MyVideo.js"],"sourcesContent":["import { Box } from '@mui/system'\nimport React, { useRef, useState } from 'react'\nimport { useEffect } from 'react'\nconst { getConnectedDevices } = require('../MediaQuery/MediaDevices')\n\n\nfunction MyVideo() {\n    const videoRef = useRef(null)\n    const [devices, setDevices] = useState()\n\n\n\n    useEffect(() => {\n        getConnectedDevices('videoinput')\n            .then(doc => setDevices(doc))\n    }, [])\n\n    useEffect(() => {\n        navigator.mediaDevices.addEventListener('devicechange', event => {\n            getConnectedDevices('videoinput').then(doc => setDevices(doc))\n        })\n    })\n\n    return (\n        <Box sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-around',\n            width: '100%',\n            pl: 120\n        }}>\n            <button>camera</button>\n            <video id='video001' ref={videoRef} autoPlay playsInline controls={false}></video>\n        </Box>\n    )\n}\n\nexport default MyVideo"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AACA,MAAM;EAAEC;AAAF,IAA0BC,OAAO,CAAC,4BAAD,CAAvC;;AAGA,SAASC,OAAT,GAAmB;EAAA;;EACf,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;EAIAC,SAAS,CAAC,MAAM;IACZC,mBAAmB,CAAC,YAAD,CAAnB,CACKM,IADL,CACUC,GAAG,IAAIF,UAAU,CAACE,GAAD,CAD3B;EAEH,CAHQ,EAGN,EAHM,CAAT;EAKAR,SAAS,CAAC,MAAM;IACZS,SAAS,CAACC,YAAV,CAAuBC,gBAAvB,CAAwC,cAAxC,EAAwDC,KAAK,IAAI;MAC7DX,mBAAmB,CAAC,YAAD,CAAnB,CAAkCM,IAAlC,CAAuCC,GAAG,IAAIF,UAAU,CAACE,GAAD,CAAxD;IACH,CAFD;EAGH,CAJQ,CAAT;EAMA,oBACI,QAAC,GAAD;IAAK,EAAE,EAAE;MACLK,OAAO,EAAE,MADJ;MAELC,UAAU,EAAE,QAFP;MAGLC,cAAc,EAAE,cAHX;MAILC,KAAK,EAAE,MAJF;MAKLC,EAAE,EAAE;IALC,CAAT;IAAA,wBAOI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAO,EAAE,EAAC,UAAV;MAAqB,GAAG,EAAEb,QAA1B;MAAoC,QAAQ,MAA5C;MAA6C,WAAW,MAAxD;MAAyD,QAAQ,EAAE;IAAnE;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH;;GA7BQD,O;;KAAAA,O;AA+BT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}